@page "/projects/{projectId:int}/tickets"
@inject ITicketsScreenUseCases TicketsScreenUseCases;
@inject NavigationManager NavigationManager;
@attribute [Authorize]
<h3>Tickets</h3>

<br/>
<div class="row">
    <div class="col-auto">
        <input type="text" class="form-control" @bind-value="searchFilter"/>
    </div>
    <div class="col-auto">
        <button type="button" class="btn btn-light" @onclick="OnSearch">Buscar</button>
    </div>
    <div class="col-auto">
        <div class="form-check form-check-inline">
          <input class="form-check-input" type="checkbox" id="myticket" @bind-value="ViewMyTickets">
          <label class="form-check-label" for="myticket">Vizualizar meus tickets</label>
        </div>        
    </div>
</div>
<br/>

@if (tickets != null)
{
    <table class="table">
        <thead>
        <tr>
            <th>Titulo</th>
            <th>Descrição</th>
            <th>Dono</th>
            <th>Data Ocorrência</th>
            <th>Data Vencimento</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var ticket in tickets)
        {
            <TicketsRowComponent Ticket="ticket"></TicketsRowComponent>
        }
        </tbody>
    </table>
}

<button class="btn btn-primary" @onclick="InserirTicket">Inserir Ticket</button>

@code {
    IEnumerable<Ticket> tickets;
    string searchFilter;
    
    [Parameter]
    public int projectId { get; set; }

    bool viewMyTickets = false;
    public bool ViewMyTickets { 
        get => viewMyTickets;
        set
        {
            viewMyTickets = value;
            Task.Run(async () =>
            {
                if (viewMyTickets)
                    tickets = await TicketsScreenUseCases.ViewOwnersTickets(projectId, "Victor");
                else 
                    tickets = await TicketsScreenUseCases.ViewTickets(projectId);
                StateHasChanged();
            });
        }
    }
    
    protected override async Task OnParametersSetAsync()
    {
        tickets = await TicketsScreenUseCases.ViewTickets(projectId);
    }

    private async Task OnSearch()
    {
        tickets = await TicketsScreenUseCases.SearchTickets(searchFilter);
    }

    private void InserirTicket()
    {
        NavigationManager.NavigateTo($"/projects/{projectId}/inserirticket");
    }

}